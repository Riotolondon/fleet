rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users' basic info for notifications
    }
    
    // Notifications collection - users can read their own notifications
    // System can create notifications for any user
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null; // Allow creating notifications for other users
    }
    
    // Vehicles collection - authenticated users can read all vehicles
    // Users can create/update their own vehicles
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource == null || resource.data.ownerId == request.auth.uid);
    }
    
    // Applications collection - for driver applications to vehicles
    match /applications/{applicationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource == null || 
         resource.data.driverId == request.auth.uid || 
         resource.data.ownerId == request.auth.uid);
    }
    
    // Chat conversations - users can read/write conversations they're part of
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        (resource == null || request.auth.uid in resource.data.participants.keys());
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants.keys();
    }
    
    // Chat messages - users can read messages from their conversations
    // Users can create messages in conversations they're part of
    match /chatMessages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
    }
    
    // Typing status - users can manage their own typing status
    match /typingStatus/{statusId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource == null || request.auth.uid == resource.data.userId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
  }
} 