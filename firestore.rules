rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to read all users, write own data
    match /users/{userId} {
      allow read: if request.auth != null; // All authenticated users can read user profiles
      allow write: if request.auth != null && request.auth.uid == userId; // Users can only update their own profile
    }
    
    // Online users collection - for real-time presence tracking
    match /onlineUsers/{userId} {
      allow read: if request.auth != null; // All authenticated users can see who's online
      allow write: if request.auth != null; // Allow any authenticated user to write (for flexibility during development)
    }
    
    // User presence collection - for detailed presence information
    match /userPresence/{userId} {
      allow read: if request.auth != null; // All authenticated users can read presence
      allow write: if request.auth != null; // Allow any authenticated user to write
    }

    // Notifications collection - users can read their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow write: if request.auth != null; // Allow creating notifications for any user
    }
    
    // Vehicles collection - authenticated users can read all vehicles
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource == null || resource.data.ownerId == request.auth.uid);
    }
    
    // Applications collection - for driver applications to vehicles
    match /applications/{applicationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource == null || 
         resource.data.driverId == request.auth.uid || 
         resource.data.ownerId == request.auth.uid);
    }
    
    // Chat conversations - simplified permissions for development
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null;
    }
    
    // Chat messages collection (updated collection name)
    match /chatMessages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // Messages collection (alternate collection name used by chat service)
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // Typing status - allow all authenticated users to manage typing status
    match /typingStatus/{statusId} {
      allow read, write: if request.auth != null;
    }
  }
} 